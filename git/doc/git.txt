git

1) svn与git区别
git是分布式版本控制系统. svn是集中式版本控制系统，版本库是集中放在中央服务器的，工作的时候首先
要从中央服务器得到最新的版本，完成之后再推送到中央服务器.集中式版本控制系统是必须联网才能工作，
如果网速慢将会导致工作效率低下.
2) git是分布式版本控制系统，它没有中央服务器，每个人的电脑就是一个完整的版本库，这样，工作的时候就
无需联网.
所有版本控制系统，只能跟踪文本文件的改动，例如 txt/网页/代码等，版本控制系统可以告诉你每次的改动，
但是对于图片等二进制文件，虽然也能版本控制管理，但没法跟踪文件的变化，只能把二进制文件每次改动
串起来。

3) git常用命令
git init 初始化git，把某个目录变成git可以管理的仓库
git config --list 获取配置列表
git config --global user.name=xx 设置用户名，global表示当前机器上所有git仓库都会使用该配置
git config --global user.email=xx 设置邮箱，global表示当前机器上所有git仓库都会使用该配置
可以配置该机器上所有git仓库都使用该配置，也可以指定某个仓库使用不同的用户名和邮箱

4) 版本仓库 (repository)
版本库或仓库，简单理解为一个目录，该目录中的所有文件都可以被git管理起来，每个文件的修改、删除，git都能
跟踪，以便任何时刻都可以追踪历史，或者在将来某个时刻可以将文件还原。
创建版本仓库
git init 初始化git，把某个目录变成git可以管理的仓库，该目录下会多出一个.git目录，这个目录是用来跟踪管理版本的。
.git目录就是一个版本库，git会自动创建master分支，以及指向master的一个指针HEAD.

添加到版本库
git add 文件 可以把该文件添加到暂存区里面.
git commit -m "提交注释" 将变更提交到仓库，执行该命令之前，先执行 git add 添加变更
git status 查看是否还有文件未提交
git diff 文件 查看某个文件的变更细节
git log 查看版本日志 git log –-pretty=oneline 
git reset --hard HEAD^ 回退上一个版本
git reset --hard HEAD^^ 回退上上一个版本
git reset --hard HEAD~100 回退上100个版本

工作区
初始化前创建的目录，除了.git目录的所有目录。
版本库: .git目录就是版本库，这个不属于工作区，存放分支等数据.
暂存区: 版本库中最重要部分.

操作步骤
1) 添加: git add xx 把文件加入暂存区
2) 提交: git commit 提交更改，把暂存区的内容提交到当前分支

撤销变更(未commit 或  add，命令中的 -- 很重要，没有就变成创建分支的命令了)
git checkout -- 文件


远程仓库
本地git仓库和远程仓库之间的传输用SSH加密，需要进行设置
1) 创建SSH Key，在用户主目录下，看看是否有.ssh目录 （C:\Users\admin\.ssh）
如果有，再看看该目录下是否有id_rsa 和 id_rsa.pub 文件，如果没有则需要执行命令
ssh-keygen -t rsa -C "email地址"
私钥不能泄漏给别人，公钥可以告诉别人.

SSH
1) 使用https url克隆到本地 (例如: https://github.com/zhengqianye/camel.git) 也可以使用ssh url 克隆到本地。
2) 区别: https可以随意克隆github上的项目，而ssh必须是项目拥有者或管理员，且需要先添加ssh key，否则
无法克隆.
https在push的时候需要验证用户名和密码，而在ssh在push的时候，是不需要输入用户名的，如果配置ssh key时
设置了密码，则需要输入密码，否则是不需要输入密码的.
3) 配置ssh key


多协议访问
1) http(s)
2) git
3) ssh
4) 用户名ssh




